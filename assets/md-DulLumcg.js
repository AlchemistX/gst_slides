import{b as u,o,w as t,g as l,B as s,v as m,x as p,C as i}from"./modules/vue-DhAglAFb.js";import{_ as c}from"./05-overview-03-CK6qVxPg.js";import{_ as f}from"./top-title-DXL6wPsa.js";import{u as _,f as d}from"./slidev/context-DBUmR2Lv.js";import"./layoutHelper-HtdtuDyr.js";import"./index-CAm3x-8s.js";import"./modules/shiki-B1249S1Y.js";const w={__name:"05-overview.md__slidev_86",setup(P){const{$clicksContext:n,$frontmatter:a}=_();return n.setup(),(x,e)=>(o(),u(f,m(p(i(d)(i(a),85))),{title:t(r=>[...e[0]||(e[0]=[l("h1",null,"GStreamer Overview",-1)])]),content:t(r=>[...e[1]||(e[1]=[l("figure",{class:"text-center"},[l("div",{class:"w-full mx-auto"},[l("img",{src:c,class:"w-auto h-20 max-h-[75vh] object-contain mx-auto block shadow-md rounded-lg"})])],-1),l("div",{class:"ns-c-tight text-sm"},[l("div",{class:"mt-1"},[l("h4",null,"Pipeline 예제에서 상태 전환 시 일어나는 일 : PAUSED -> PLAYING"),l("ul",null,[l("li",null,"Pipeline 이 PREROLLED 되면, alsasink 는 Pipeline 에 Clock을 제공할 수 있게 된다."),l("li",null,[s("alsasink 는 PAUSED 상태이기 때문에 Buffer 를 수신 한 뒤 실행을 멈추게 된다. "),l("ul",null,[l("li",null,"filesrc -> mp3dec -> alsasink 로의 Buffer push 과정은 함수 연쇄 호출로 구현된다."),l("li",null,"alsasink 의 sink pad 객체에 적용한 gst_pad_push() 함수가 리턴하지 않음을 의미한다."),l("li",null,"이러한 매커니즘은 filesrc, mp3dec 를 효율적으로 멈춰 있게 한다.")])]),l("li",null,[s("모든 Element 가 gst_element_get_state() 함수에서 SUCCESS 를 리턴하게 되었다. "),l("ul",null,[l("li",null,"Pipeline 을 PLAYING 상태에 놓을 수 있게 되었다.")])]),l("li",null,[s("PLAYING 상태로 이동하면서 Pipeline 이 수행하는 작업 "),l("ul",null,[l("li",null,"클럭을 선택하고 현재 시간을 셈플링한다 -> base_time 설정"),l("li",null,"Buffer의 running_time 을 활용한 동기화를 위해 각 Element 에 base_time 을 배포 한다.")])]),l("li",null,[s("PAUSED -> PLAYING "),l("ul",null,[l("li",null,"alsasink : Buffer의 샘플이 오디오 장치로 재생 된다."),l("li",null,"mp3dec : 아무 일도 일어나지 않는다."),l("li",null,"filesrc : 아무 일도 일어나지 않는다.")])])])])],-1)])]),_:1},16))}};export{w as default};
